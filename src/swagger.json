{
  "openapi": "3.0.0",
  "info": {
    "title": "API Wheels on Sale",
    "description": "A API tem como objetivo a manipulação de usuários, produtos e chat",
    "contact": {
      "email": "group27-t14@mail.com"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Local API"
    }
  ],
  "paths": {
    "/login": {
      "post": {
        "summary": "User Login",
        "description": "This route will log user in",
        "tags": ["Login"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              },
              "examples": {
                "user": {
                  "value": {
                    "email": "client1@mail.com",
                    "password": "1234"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Invalid credentials"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Login"
                }
              }
            }
          }
        }
      }
    },
    "/user": {
      "post": {
        "summary": "Create User",
        "description": "This route will register a new user",
        "tags": ["User"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              },
              "examples": {
                "user": {
                  "value": {
                    "name": "Client 1",
                    "email": "client1@mail.com",
                    "password": "1234",
                    "is_admin": false,
                    "is_seller": false,
                    "personalInformation": {
                      "cpf": "12345678900",
                      "phone": "1234567890",
                      "birth_date": "1990-01-01",
                      "description": "Descrição das informações pessoais"
                    },
                    "addressInformation": {
                      "cep": "12345678",
                      "state": "Estado",
                      "city": "Cidade",
                      "street": "Rua",
                      "number": "123",
                      "complement": "Complemento do endereço"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "409": {
            "description": "Conflict"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List All Users",
        "description": "This route will show all users",
        "tags": ["User"],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "appication/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/user/me": {
      "get": {
        "summary": "Find User by Token",
        "description": "This route will find a user",
        "tags": ["User"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Token do Portador (Bearer Token)",
            "required": true
            }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "200": {
            "description": "OK",
            "content": {
              "appication/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "summary": "Find User",
        "description": "This route will find a user",
        "tags": ["User"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User By ID",
            "required": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "200": {
            "description": "OK",
            "content": {
              "appication/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update User",
        "description": "This route will update a user",
        "tags": ["User"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User By ID",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              },
              "examples": {
                "user": {
                  "value": {
                    "name": "Cliente da Silva Sauro",
                    "addressInformation": {
                      "cep": "9999999"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unautorized"
          },
          "404": {
            "description": "Not Found"
          },
          "200": {
            "description": "OK",
            "content": {
              "appication/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete User",
        "description": "This route will delete a user",
        "tags": ["User"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User By ID",
            "required": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unautorized"
          },
          "404": {
            "description": "Not Found"
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/user/{id}/cars": {
      "get": {
        "summary": "List All Cars on User",
        "description": "This route will show all cars included on user",
        "tags": ["User"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User By ID",
            "required": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "200": {
            "description": "OK",
            "content": {
              "appication/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/car": {
      "post": {
        "summary": "Create Veicles",
        "description": "This route will register a new veicle",
        "tags": ["Car"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Car"
              },
              "examples": {
                "car": {
                  "value": {
                    "brand": "Toyota",
                    "model": "Corolla",
                    "year": "2022",
                    "fuel": "Gasolina",
                    "km": "10.000",
                    "color": "Prata",
                    "fipe": "123456",
                    "price": "80000",
                    "description": "Carro em excelente estado"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unautorized"
          },
          "201": {
            "description": "Created",
            "content": {
              "appication/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Car"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List All Veicles",
        "description": "This route will show all veicles",
        "tags": ["Car"],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "appication/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Car"
                }
              }
            }
          }
        }
      }
    },
    "/car/{id}": {
      "get": {
        "summary": "Find Car",
        "description": "This route will find a car by id",
        "tags": ["Car"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Car By ID",
            "required": true
          },
          {
            "name": "brand",
            "in": "query",
            "description": "Key para busca",
            "required": false
          },
          {
            "name": "model",
            "in": "query",
            "description": "Key para busca",
            "required": false
          },
          {
            "name": "color",
            "in": "query",
            "description": "Key para busca",
            "required": false
          },
          {
            "name": "year",
            "in": "query",
            "description": "Key para busca",
            "required": false
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "200": {
            "description": "OK",
            "content": {
              "appication/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Car"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update Veicle",
        "description": "This route will update a veicle",
        "tags": ["Car"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Car By ID",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Car"
              },
              "examples": {
                "car": {
                  "value": {
                    "brand": "Volkswagen",
                    "model": "Fusca",
                    "year": "1973/1973",
                    "fuel": "Gasolina",
                    "km": "9.000",
                    "color": "Azul",
                    "fipe": "33.372",
                    "price": "30000",
                    "description": "Carro em excelente estado"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unautorized"
          },
          "404": {
            "description": "Not Found"
          },
          "200": {
            "description": "OK",
            "content": {
              "appication/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Car"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Veicle",
        "description": "This route will delete a veicle",
        "tags": ["Car"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Car By ID",
            "required": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unautorized"
          },
          "404": {
            "description": "Not Found"
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/image/{id}": {
      "post": {
        "summary": "Create Image",
        "description": "This route will add one image to a car",
        "tags": ["Image"],
        "security": [{ "bearerAuth": [] }],
                "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Car By ID",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Image"
              },
              "examples": {
                "user": {
                  "value": {
                    "url": "https://th.bing.com/th/id/R.fc11817b2c60f17167244b14fc90a625?rik=76pH8B4rAgxxzQ&pid=ImgRaw&r=0"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Find"
          },
          "409": {
            "description": "Conflict"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Image"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List all Images",
        "description": "This route will list all images from a car",
        "tags": ["Image"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Car By ID",
            "required": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "200": {
            "description": "OK",
            "content": {
              "appication/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Image"
                }
              }
            }
          }
        }
      }
    },
    "/image/{imageId}/car/{carId}": {
      "delete": {
        "summary": "Delete Image",
        "description": "This route will delete one image from a car",
        "tags": ["Image"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "imageId",
            "in": "path",
            "description": "Image ID",
            "required": true
          },
          {
            "name": "carId",
            "in": "path",
            "description": "Car ID",
            "required": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unautorized"
          },
          "404": {
            "description": "Not Found"
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/comments": {
      "get": {
        "summary": "List All Comments",
        "description": "This route will list all comments from a car",
        "tags": ["Comment"],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "appication/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Comment"
                }
              }
            }
          }
        }
      }
    },
    "/comments/{id}": {
      "post": {
        "summary": "Create Comment",
        "description": "This route will add one comment to a car",
        "tags": ["Comment"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Car ID",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Comment"
              },
              "examples": {
                "user": {
                  "value": {
                    "description": "Carro de único dono, pouco rodado"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Find"
          },
          "409": {
            "description": "Conflict"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Comment"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update Comment",
        "description": "This route will update one comment from a car",
        "tags": ["Comment"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Comment ID",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Comment"
              },
              "examples": {
                "car": {
                  "value": {
                    "description": "Carro de único dono, pouco rodado, sem pneu reserva"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unautorized"
          },
          "404": {
            "description": "Not Found"
          },
          "200": {
            "description": "OK",
            "content": {
              "appication/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Comment"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Comment",
        "description": "This route will delete one comment from a car",
        "tags": ["Comment"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Comment ID",
            "required": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unautorized"
          },
          "404": {
            "description": "Not Found"
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Comment": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          }
        }
      },
      "Image": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          }
        }
      },
      "Login": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "is_admin": {
            "type": "boolean"
          },
          "is_seller": {
            "type": "boolean"
          },
          "personalInformation": {
            "cpf": {
              "type": "string"
            },
            "phone": {
              "type": "string"
            },
            "birth_date": {
              "type": "string"
            },
            "description": {
              "type": "string"
            }
          },
          "addressInformation": {
            "cep": {
              "type": "string"
            },
            "state": {
              "type": "string"
            },
            "city": {
              "type": "string"
            },
            "street": {
              "type": "string"
            },
            "number": {
              "type": "string"
            },
            "complement": {
              "type": "string"
            }
          }
        }
      },
      "Car": {
        "type": "object",
        "properties": {
          "brand": {
            "type": "string"
          },
          "model": {
            "type": "string"
          },
          "year": {
            "type": "string"
          },
          "fuel": {
            "type": "string"
          },
          "km": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "fipe": {
            "type": "string"
          },
          "price": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
